(function() {  

  var app = angular.module('earfulOfAngular',['ngMap'])
  
  //DIRECTIVE to call my createWave function once my repeat is over
  .directive('onLastRepeat', function() {
    return function(scope, element, attrs) {
      if (scope.$last) setTimeout(function(){
        scope.$emit('onRepeatLast', element, attrs);
      }, 1);
    };
  })



  app.controller('FeedController', ['$scope','$http', function($scope, $http) {
    $scope.menuItem = "My Sounds"
   
    // nav menu open or closed value

    $scope.menuItems = [
    {
      id: 'navMySounds',
      callMethod: 'loadMySounds()',
      text: 'My Sounds'
    },
    {
      id: 'navMyFeed',
      callMethod: 'loadMyFeed()',
      text: 'My Feed'
    },
    {
      id: 'navGlobalFeed',
      callMethod: 'loadGlobalFeed()',
      text: 'All Sounds'
    },
    {
      id: 'navFindUsers',
      callMethod: 'findUsers()',
      text: 'Find Users'
    }
    ]

    $scope.random = function(element){

      if ($scope.menuOpen) {
        console.log("inside if", $scope.menuOpen);
        switch(element.callMethod) {
          case 'loadMySounds()':
          $scope.loadMySounds()
          $scope.orderMenu(element);
          break;
          case 'loadMyFeed()':
          $scope.loadMyFeed()
          $scope.orderMenu(element);
          break;
          case 'loadGlobalFeed()':
          $scope.loadGlobalFeed()
          $scope.orderMenu(element);
          break;
          case 'findUsers()':
          $scope.findUsers()
          $scope.orderMenu(element);
          break;
        }
        $scope.menuItem = element.text;
        $scope.menuOpen = false;
      } else {
        console.log("inside else", $scope.menuOpen);
        console.log("menuItem before", $scope.menuItem);
        $scope.menuItem = undefined;
        $scope.menuOpen = true;
      }
    }

    $scope.orderMenu = function(element){
      var index = $scope.menuItems.indexOf(element)
      $scope.menuItems.splice(index, 1);
      $scope.menuItems.unshift(element);
      console.log($scope.menuItems);
    }

    // variable used to toggle edit inputs
    $scope.editItem = false;
    // starting and ending points used to determine user id from URL
    starting_point = (document.URL).indexOf('/users/') + 7;
    ending_point = (document.URL).search('/posts');
    $scope.userId = (document.URL).substring(starting_point,ending_point);
    // variable used to determine if the play or stop button should be shown, set to false on load
    $scope.playingSound = false;
    // an empty map object
    $scope.map = {};
    // an empty array for the location markers
    $scope.markers = [];

    // variables for MySounds page
    $scope.mySounds = [];
    $scope.myWaves = {};

    $('#navMySounds').addClass('selected');
    $scope.$on('onRepeatLast', function(scope, element, attrs){

      switch(attrs.onLastRepeat) {
        case "buildNav":
        buildNav()
        break;
        case "buildWave":
        buildWave(element)
        break;
      }
    });

    

    function buildWave(element) {

     var element_id = "#" + element.parent().attr("id");
     if (element_id === "#mySounds") {
      $scope.createWave($scope.mySounds, element_id);
    } else if (element_id === "#myFeed") {
      $scope.createWave($scope.followedPosts, element_id);
    } else if (element_id === "#globalFeed") {
      $scope.createWave($scope.allPosts, element_id);
    }

  }


    // this controls the MySounds page
    $scope.loadMySounds = function(){

      // Get request to retreive mySounds
      $http.get('/users/'+ $scope.userId +'/posts.json').success(function(data){
        $scope.mySounds = data.posts
        console.log($scope.mySounds);
        
      });
      // unhide mySounds
      $('#mySounds').removeClass('hide');
      // hide myFeed
      $('#myFeed').addClass('hide');
      // hide map
      $('#map').addClass('hide');
      // hide GlobalFeed
      $('#globalFeed').addClass('hide');
      // hide findUsers
      $('#findUsers').addClass('hide');
      // remove nav highlighting
      $('#navMyFeed').removeClass('selected')
      $('#navGlobalFeed').removeClass('selected')
      $('#navFindUsers').removeClass('selected')
      // highlight Nav element
      $('#navMySounds').addClass('selected');
      // generate waveforms and draw on page
      //$scope.createWave($scope.mySounds);
    };

    $scope.loadMySounds();

    // this controls the MyFeed page
    $scope.loadMyFeed = function(){
      // unhide myFeed page
      $('#myFeed').removeClass('hide');
      // hide mySounds
      $('#mySounds').addClass('hide');
      // hide map
      $('#map').addClass('hide');
      // hide GlobalFeed
      $('#globalFeed').addClass('hide');
      // hide findUsers
      $('#findUsers').addClass('hide');
      // remove nav highlighting
      $('#navMySounds').removeClass('selected')
      $('#navGlobalFeed').removeClass('selected')
      $('#navFindUsers').removeClass('selected')
      // highlight Nav element
      $('#navMyFeed').addClass('selected');

      // variables for Feed page
      $scope.followedPosts = [];
      //Get request to retreive publicPosts
      $http.get('/users/'+ $scope.userId +'/followed.json').success(function(data){
        $scope.followedPosts = data.feeds;
      });

      //$scope.createWave($scope.followedPosts);
    }

    // this controls the MyFeed page
    $scope.loadGlobalFeed = function(){
      // unhide GlobalFeed page
      $('#globalFeed').removeClass('hide');
      // hide mySounds
      $('#mySounds').addClass('hide');
      // hide map
      $('#map').addClass('hide');
      // hide myFeed
      $('#myFeed').addClass('hide');
      // hide findUsers
      $('#findUsers').addClass('hide');
      // remove nav highlighting
      $('#navMySounds').removeClass('selected')
      $('#navMyFeed').removeClass('selected');
      $('#navFindUsers').removeClass('selected')
      // highlight Nav element
      $('#navGlobalFeed').addClass('selected')
      
      $scope.allPosts = [];
      $http.get('/posts.json').success(function(data){
        $scope.allPosts = data.posts;
      });
    }

    // this controls the findUsers page
    $scope.findUsers  = function(){
      // unhide findUsers page
      $('#findUsers').removeClass('hide');
      // hide mySounds
      $('#mySounds').addClass('hide');
      // hide map
      $('#map').addClass('hide');
      // hide GlobalFeed
      $('#globalFeed').addClass('hide');
      // hide myFeed
      $('#myFeed').addClass('hide');
      // remove nav highlighting
      $('#navMySounds').removeClass('selected')
      $('#navMyFeed').removeClass('selected');
      $('#navGlobalFeed').removeClass('selected')
      // highlight Nav element
      $('#navFindUsers').addClass('selected')

      $scope.users = [];

      $http.get('/fetch_users.json').success(function(data){
        $scope.users = data.feeds;
        console.log($scope.users)
      });
    }

    $scope.createWave = function(mySounds, element){

      $.each(mySounds, function(index, value){
        $scope.myWaves[value.user_id + value.sound.sound.url] = Object.create(WaveSurfer);
        console.log(element);
        $scope.myWaves[value.user_id + value.sound.sound.url].init({
          container: document.querySelector(element + ' .waveform_'+value.id),
          waveColor: '#3AA1BF',
          progressColor: '#F2385A',
          hideScrollbar: true,
          interact: false,
          normalize: true,
          scrollParent: true
        });

        $scope.myWaves[value.user_id + value.sound.sound.url].load(value.sound.sound.url);        
      });

    }

    $scope.deleteItem = function(item){

      $http.delete('/users/'+ $scope.userId + '/posts/' + item.id + '.json').success(function(data){
        var index = $scope.mySounds.indexOf(item);
        $scope.mySounds.splice(index, 1);
      });

    }

    $scope.selectEditItem = function(item){
      $scope.editItem = item;
    }

    $scope.selectUpdateItem = function(item){
      $http.put('/users/'+ $scope.userId + '/posts/' + item.id + '.json', item ).success(function(data){
        $scope.editItem = 0;
        var index = $scope.mySounds.indexOf(item);
        $scope.mySounds.splice(index, 1, data.post);
      });
    }

    $scope.followUser = function(user){
     console.log(user.id);
     $http.post('/relationships.json', { relationship:{
      follower_id: $scope.userId,
      followed_id: user.id
    }}).success(function(data){
      console.log("successfully created a new relationship");
    });
  }

  $scope.unfollowUser = function(item){
    $http.get('/users/'+item.user_id+'/unfollow.json').success(function(data){
      console.log('post to unfollow user successful')
      index = $scope.followedPosts.indexOf(item);
        //remove that relationships items from feed
        $scope.followedPosts.splice(index, 1);
      });
  }

  $scope.stopSound = function(item){

    $scope.myWaves[item.user_id + item.sound.sound.url].stop();
    $scope.playingSound = false;

  }

  $scope.playSound = function(item){ 
    console.log('play function')
    $scope.playingSound = true;
    $scope.myWaves[item.user_id + item.sound.sound.url].play();

    $scope.myWaves[item.user_id + item.sound.sound.url].on('finish', function(){
      console.log("Sound finished");
      $scope.playingSound = false;
    });
  }


    // $scope.loadMap = function(){ 
    //   $('#myfeed').addClass('hide');
    //   $('#mapLink').addClass('selected');
    //   $('#mapOfSounds').removeClass('hide');
    //   $('#userSearch').addClass('hide')

    //   $scope.audioIcon = "/audioIcon.png"

    //   $scope.mapStyle = [{"featureType":"road","elementType":"labels","stylers":[{"visibility":"simplified"},{"lightness":20}]},{"featureType":"administrative.land_parcel","elementType":"all","stylers":[{"visibility":"off"}]},{"featureType":"landscape.man_made","elementType":"all","stylers":[{"visibility":"off"}]},{"featureType":"transit","elementType":"all","stylers":[{"visibility":"off"}]},{"featureType":"road.local","elementType":"labels","stylers":[{"visibility":"simplified"}]},{"featureType":"road.local","elementType":"geometry","stylers":[{"visibility":"simplified"}]},{"featureType":"road.highway","elementType":"labels","stylers":[{"visibility":"simplified"}]},{"featureType":"poi","elementType":"labels","stylers":[{"visibility":"off"}]},{"featureType":"road.arterial","elementType":"labels","stylers":[{"visibility":"off"}]},{"featureType":"water","elementType":"all","stylers":[{"hue":"#a1cdfc"},{"saturation":30},{"lightness":49}]},{"featureType":"road.highway","elementType":"geometry","stylers":[{"hue":"#f49935"}]},{"featureType":"road.arterial","elementType":"geometry","stylers":[{"hue":"#fad959"}]}]

    //   var geocoder = new google.maps.Geocoder();
    //   $.each( $scope.mySounds, function( index, value ){
    //        geocoder.geocode({
    //           'address': value.location
    //        }, 
    //        function(results, status) {
    //           if(status == google.maps.GeocoderStatus.OK) {
    //              new google.maps.Marker({
    //                 position: results[0].geometry.location,
    //                 icon: $scope.audioIcon,
    //                 title: value.location,
    //                 map: $scope.map
    //              });
    //              $scope.map.setCenter(results[0].geometry.location);
    //              $scope.map.setOptions({styles: $scope.mapStyle});
    //           }
    //        });

    //   });

    //   $scope.$on('mapInitialized', function(event, map) {
    //     $scope.map.setCenter({
    //       center: {
    //         latitude: 45,
    //         longitude: -73
    //       },
    //       zoom: 8

    //     });
    //   });

    // }


  }]);

})();